{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","index.js"],"names":["Card","props","className","src","monster","id","alt","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","res","json","users","this","filteredMonsters","filter","toLowerCase","includes","Component","ReactDOM","render","document","getElementById"],"mappings":"4SAGaA,G,kBAAO,SAACC,GACjB,OACI,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAG,+BAA0BF,EAAMG,QAAQC,GAAxC,aAAuDC,IAAI,YACnE,6BAAKL,EAAMG,QAAQG,OACnB,4BAAIN,EAAMG,QAAQI,aCJjBC,EAAW,SAACR,GACrB,OACI,qBAAKC,UAAU,YAAf,SAEQD,EAAMS,SAASC,KAAI,SAAAP,GAAO,OACtB,cAAC,EAAD,CAAMC,GAAID,EAAQC,GAAID,QAASA,UCNtCQ,G,MAAY,SAAC,GAAiC,IAAhCC,EAA+B,EAA/BA,YAAaC,EAAkB,EAAlBA,aACpC,OACI,uBACIZ,UAAU,SACVa,KAAK,SACLF,YAAaA,EACbG,SAAUF,MCmCPG,E,kDAtCX,aAAe,IAAD,8BACV,gBAcJH,aAAe,SAACI,GACZ,EAAKC,SAAS,CAACC,YAAaF,EAAEG,OAAOC,SAbrC,EAAKC,MAAQ,CACTb,SAAU,GACVU,YAAa,IALP,E,gEASO,IAAD,OAChBI,MAAM,8CACDC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAAET,SAAUkB,S,+BAOvC,IAAD,EAC6BC,KAAKN,MAA/Bb,EADH,EACGA,SAAUU,EADb,EACaA,YACZU,EAAmBpB,EAASqB,QAAO,SAAA3B,GAAO,OAC5CA,EAAQG,KAAKyB,cAAcC,SAASb,EAAYY,kBAGpD,OACI,sBAAK9B,UAAU,MAAf,UACI,kDACA,cAAC,EAAD,CACIW,YAAY,kBACZC,aAAce,KAAKf,eAEvB,cAAC,EAAD,CAAUJ,SAAUoB,W,GAjClBI,aCAlBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.983a3eea.chunk.js","sourcesContent":["import React from 'react';\nimport './Card.styles.css';\n\nexport const Card = (props) => {\n    return (\n        <div className=\"card-container\">\n            <img src={`https://robohash.org/${props.monster.id}&set=set2`} alt=\"monster\"/>\n            <h2>{props.monster.name}</h2>\n            <p>{props.monster.email}</p>\n        </div>\n    )\n}","import React from 'react';\nimport './card-list.style.css';\nimport {Card} from \"../card/card.component\";\n\nexport const CardList = (props) => {\n    return (\n        <div className='card-list'>\n            {\n                props.monsters.map(monster => (\n                    <Card id={monster.id} monster={monster} />\n                ))\n            }\n        </div>\n    )\n}","import React from 'react';\nimport './search-box.styles.css';\n\nexport const SearchBox = ({placeholder, handleChange}) => {\n    return (\n        <input\n            className=\"search\"\n            type=\"search\"\n            placeholder={placeholder}\n            onChange={handleChange}\n        />\n    )\n};","import React, {Component} from 'react';\nimport './App.css';\nimport { CardList } from './components/card-list/card-list.component';\nimport {SearchBox} from \"./components/search-box/search-box.component\";\n\nclass App extends Component {\n    constructor() {\n        super();\n\n        this.state = {\n            monsters: [],\n            searchField: ''\n        }\n    }\n\n    componentDidMount() {\n        fetch('https://jsonplaceholder.typicode.com/users')\n            .then(res => res.json())\n            .then(users => this.setState({ monsters: users }))\n    }\n\n    handleChange = (e) => {\n        this.setState({searchField: e.target.value})\n    }\n\n    render() {\n        const { monsters, searchField } = this.state;\n        const filteredMonsters = monsters.filter(monster =>\n            monster.name.toLowerCase().includes(searchField.toLowerCase())\n        );\n\n        return (\n            <div className=\"App\">\n                <h1>Monsters Rolodex</h1>\n                <SearchBox\n                    placeholder=\"search monsters\"\n                    handleChange={this.handleChange}\n                />\n                <CardList monsters={filteredMonsters} />\n            </div>\n        )\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}